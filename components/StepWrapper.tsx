'use client';
import React from 'react';
import { Metadata } from 'next';
// import tr from '../tracks.module.scss';
import { Box, Button, Card, Grid, Step, StepLabel, Stepper, Typography } from '@mui/material';

export const metadata: Metadata = {
  title: 'Xopcify | Tracks',
  description: 'Generated by create next app',
};

interface StepWrapperProps {
  activeStep: number;
  children: any;
  next: () => void;
  back: () => void;
  completed: () => void;
}

const steps = ['Add track info', 'Select cover', 'Add your track'];

const StepWrapper: React.FC<StepWrapperProps> = ({
  activeStep,
  children,
  back,
  next,
  completed,
}) => {
  return (
    <Box sx={{ minWidth: '200px', maxWidth: '1100px' }}>
      <Stepper activeStep={activeStep}>
        {steps.map((label, index) => {
          const stepProps: { completed?: boolean } = {};
          const labelProps: {
            optional?: React.ReactNode;
          } = {};
          return (
            <Step key={label} {...stepProps}>
              <StepLabel {...labelProps}>{label}</StepLabel>
            </Step>
          );
        })}
      </Stepper>
      <Grid container justifyContent="center" style={{ margin: '70px 0 ', height: 270 }}>
        <Card style={{ width: 600, padding: '10px' }}>{children}</Card>
      </Grid>
      {activeStep === steps.length ? (
        <React.Fragment>
          <Typography sx={{ mt: 2, mb: 1 }}>
            The track has been uploaded successfully and is available for listening!
          </Typography>
          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>
            <Box sx={{ flex: '1 1 auto' }} />
            <Button onClick={completed}>Complete</Button>
          </Box>
        </React.Fragment>
      ) : (
        <React.Fragment>
          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>
            <Button color="inherit" disabled={activeStep === 0} onClick={back} sx={{ mr: 1 }}>
              Back
            </Button>
            <Box sx={{ flex: '1 1 auto' }} />
            <Button onClick={next}>{activeStep === steps.length - 1 ? 'Finish' : 'Next'}</Button>
          </Box>
        </React.Fragment>
      )}
    </Box>
  );
};

export default StepWrapper;
